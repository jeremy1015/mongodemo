{
  "name": "q-mongodb",
  "version": "0.1.4",
  "author": {
    "name": "Brian Hein",
    "email": "brian@cannedcoding.com"
  },
  "description": "Q (promises) wrapper for the mongodb node.js package",
  "contributors": [
    {
      "name": "Brian Hein",
      "email": "brian@cannedcoding.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/canned/QMongoDB.git"
  },
  "main": "./q-mongodb.js",
  "keywords": [
    "Q",
    "promises",
    "MongoDB"
  ],
  "dependencies": {
    "mongodb": "1.2.0",
    "q": "~0.8.12"
  },
  "devDependencies": {
    "mocha": "1.7.0",
    "chai": "1.3.0",
    "mocha-as-promised": "1.1.0",
    "chai-as-promised": "3.2.3"
  },
  "engines": {
    "node": "0.8.x",
    "npm": "1.1.x"
  },
  "license": "MIT",
  "readme": "Introduction\n------------\n\nThis is a node.js module which wraps the\n[mongodb module](https://github.com/mongodb/node-mongodb-native) with the\n[q promises module](https://github.com/kriskowal/q).  It handles opening a db\n(and maintaining the open db object) as well as accessing collections (creating\nthem if need be).\n\nIf you query for the same db multiple times during the lifetime of your node\napp, you'll be handed the same open db object (unless you explicitly close the\ndb with a call to `closeAll()`).\n\n\nThis fork\n---------\n\nThis fork takes a more drastic approach by wrapping the `Collection` and `Cursor`\nobjects as well, ensuring that all asynchronous mongo-operations are wrapped in\npromises. The API is kept compatible with the `mongodb` npm package.\n\nGenerally, just replace all `mongodb` functions that take a callback with a\npromise, with the only exception being `Cursor.each`, as it uses the callback\nfor iterating over the fetched objects.\n\n\nInstallation\n------------\n\n<span style=text-decoration:line-through>`npm install q-mongodb`</span>\n\nThe version offered by npm is based on the original repository and not this\nfork.\n\nTo install this version, use `npm install git://github.com/fizker/QMongoDB.git`.\n\nTo install a specific version, use `git://github.com/fizker/QMongoDB.git#0.1.2`.\n\n\nUsage\n-----\n\n    var QMongoDB = require('q-mongodb');\n\n    QMongoDB.db('my_db')\n        .invoke('collection', 'people')\n        .then(function(collection) {\n            // Perform standard collection operations here\n        }).then(function() {\n            return QMongoDB.closeAll();\n        });\n\nor you can use a connection string:\n\n    var QMongoDB = require('q-mongodb');\n\n    QMongoDB.connect('mongodb://user:pass@localhost:27017/')\n        .invoke('collection', 'people')\n        .then(function(collection) {\n            // Perform standard collection operations here\n        }).then(function() {\n            return QMongoDB.closeAll();\n        });\n\nThe collection and cursor is also wrapped for returning promises:\n\n    collection.insert(data)\n        .then(function() {\n            return collection.find()\n        })\n        .invoke('toArray')\n        .then(function(data) {\n            // Do something with the data\n            return collection.update(query, newData)\n        })\n        .then\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/canned/QMongoDB/issues"
  },
  "_id": "q-mongodb@0.1.4",
  "dist": {
    "shasum": "6a2488ec62a9fb1deeb4527db35def5525c55149"
  },
  "_resolved": "git://github.com/fizker/QMongoDB.git#55769a16415bc46d0dbd5f1d6aba690315a1c378",
  "_from": "q-mongodb@git://github.com/fizker/QMongoDB.git"
}
